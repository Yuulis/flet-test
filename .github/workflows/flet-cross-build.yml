name: build-flet-cross

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 0.1.0
  PYTHON_VERSION: 3.13.1
  FLUTTER_VERSION: 3.24.3

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: "Create Release"
        run: gh release create ${{github.ref_name}} --draft --verify-tag --notes "Release ${{github.ref_name}}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cross-build:
    needs: create-release
    strategy:
      matrix:
        include:
          # - runs-on: ubuntu-latest
          #   binary-name: ${{ vars.APP_NAME }}_linux.tar.gz
          #   target-platform: linux
          - runs-on: macos-latest
            binary-name: ${{ vars.APP_NAME }}_macos.tar.gz
            target-platform: macos
          - runs-on: windows-latest
            binary-name: ${{ vars.APP_NAME }}_windows.zip
            target-platform: windows
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: write
    steps:
      - name: Checkout Codes
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Set environment variable for UTF-8
        run: echo "PYTHONUTF8=1" >> $env:GITHUB_ENV

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip  
          pip install .

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Windows Build
        if: runner.os == 'Windows'
        run: |
          chcp 65001
          flutter config --no-analytics
          flet build windows --verbose --no-rich-output --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
          Compress-Archive -Path ./build/windows/* -DestinationPath ./build/windows/${{ matrix.binary-name }}
      - name: Upload Windows Artifact
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4.3.4
        with:
          name: windows-build-artifact
          path: build/windows
          if-no-files-found: error
          overwrite: false

      - name: MacOS Build
        if: runner.os == 'macos'
        run: |
          flutter config --no-analytics
          flet build macos --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
          tar -zcvf ./build/macos/${{ matrix.binary-name }} -C ./build/macos .
      - name: Upload MacOS Artifact
        if: runner.os == 'macos'
        uses: actions/upload-artifact@v4.3.4
        with:
          name: macos-build-artifact
          path: build/macos
          if-no-files-found: error
          overwrite: false

      # - name: Patch for linux build
      #   run: |
      #     flutter doctor
      #     sudo apt-get update -y
      #     sudo apt-get install -y ninja-build libgtk-3-dev
      #     flutter doctor
      # - name: Flet Build Linux
      #   run: |
      #     flutter config --no-analytics
      #     flet build linux --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
      #     tar --warning=no-file-changed -zcvf ./build/linux/${{ matrix.binary-name }} -C ./build/linux .
      # - name: Upload Linux Artifact
      #   uses: actions/upload-artifact@v4.3.4
      #   with:
      #     name: linux-build-artifact
      #     path: build/linux
      #     if-no-files-found: error
      #     overwrite: false 
      
      - name: Upload Release
        if: runner.os == 'Windows'
        run: gh release upload ${{ github.ref_name }} ./build/windows/${{ matrix.binary-name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload Release
        if: runner.os == 'macos'
        run: gh release upload ${{ github.ref_name }} ./build/macos/${{ matrix.binary-name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload Release
      #   if: runner.os == 'Linux'
      #   run: gh release upload ${{ github.ref_name }} ./build/linux/${{ matrix.binary-name }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
